# The `using` command allows the user to omit a prefix when referring to a peripheral.
# Here `using sysbus` allows to refer to `uart0` instead of `sysbus.uart0`.
using sysbus

# Lines below declare binary files for Zephyr BLE devices. One for central device and one for peripheral device.
# Binaries used here are defaults and can be replaced by changing variables below before running this script.
$screen_bin?=@build/screen/zephyr/zephyr.elf
$peripheral_bin?=@build/peripheral/zephyr/zephyr.elf
$central_bin?=@build/central/zephyr/zephyr.elf

# Create a wireless medium for communication.
emulation CreateBLEMedium "wireless"

# Create a machine named "screen" based on the STM32F746 platform and set it as active.
mach create "screen"
machine LoadPlatformDescription @platforms/boards/stm32f7_discovery-bb.repl
machine StartGdbServer 3333
# showAnalyzer usart1
# showAnalyzer ltdc

# Create a machine named "peripheral" based on the nRF52840 platform and set it as active.
mach create "peripheral"
machine LoadPlatformDescription @platforms/cpus/nrf52840.repl
machine StartGdbServer 3334
connector Connect sysbus.radio wireless
showAnalyzer uart0

# Create a machine named "central" based on the nRF52840 platform and set it as active.
mach create "central"
machine LoadPlatformDescription @platforms/cpus/nrf52840.repl
machine StartGdbServer 3335
connector Connect sysbus.radio wireless
showAnalyzer uart0

# Set Quantum value for CPUs. This is required by BLE stack.
# Moreover, it allows better synchronisation between machines.
emulation SetGlobalQuantum "0.00001"

# The following series of commands is executed everytime the machine is reset.
macro reset
"""
    mach set "screen"
    sysbus LoadELF $screen_bin

    mach set "peripheral"
    sysbus LoadELF $peripheral_bin

    mach set "central"
    sysbus LoadELF $central_bin
"""
runMacro $reset

echo "Script loaded. Now start with with the 'start' command."
echo ""
